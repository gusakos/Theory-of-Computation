    | general_variable OP_ASSIGN '[' expression KW_FOR general_variable ':' basic_data_type KW_IN general_variable KW_OF POSINT ']' ':' basic_data_type ';'
    {
        char* expr_assign = replaceWord($4, $6, template("%s[array_i]", $10));
        $$ = template("%s* %s = (%s*)malloc(%s * sizeof(%s));\nfor (int array_i = 0; array_i < %s; ++array_i)\n\t%s[array_i] = %s;\n", $15, $1, $15, $12, $15, $12, $1, expr_assign);
    }




 // https://www.geeksforgeeks.org/c-program-replace-word-text-another-given-word/
    // Function to replace a string with another string
    char* replaceWord(const char* s, const char* oldW, const char* newW)
    {
        char* result;
        int i, cnt = 0;
        int newWlen = strlen(newW);
        int oldWlen = strlen(oldW);

        // Counting the number of times old word
        // occur in the string
        for (i = 0; s[i] != '\0'; i++) {
            if (strstr(&s[i], oldW) == &s[i]) {
                cnt++;

                // Jumping to index after the old word.
                i += oldWlen - 1;
            }
        }

        // Making new string of enough length
        result = (char*)malloc(i + cnt * (newWlen - oldWlen) + 1);

        i = 0;
        while (*s) {
            // compare the substring with the result
            if (strstr(s, oldW) == s) {
                strcpy(&result[i], newW);
                i += newWlen;
                s += oldWlen;
            }
            else
                result[i++] = *s++;
        }

        result[i] = '\0';
        return result;
    }